---
version: 2.1

orbs:
  capture-tag: rvla/capture-tag@0.0.2

executors:

  bionic_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_percona57:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_percona80:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_tidb:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_mysql80:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_mysql84:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_debian_default:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bionic:
    docker:
    - image: mydumper/mydumper-builder-bionic
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  focal_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_percona57:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_percona80:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_tidb:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_mysql80:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_mysql84:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_debian_default:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  focal:
    docker:
    - image: mydumper/mydumper-builder-focal
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  jammy_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_percona57:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_percona80:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_tidb:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_mysql80:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_mysql84:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_debian_default:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  jammy:
    docker:
    - image: mydumper/mydumper-builder-jammy
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  noble_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_percona57:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_percona80:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_tidb:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_mysql80:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_mysql84:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_debian_default:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  noble:
    docker:
    - image: mydumper/mydumper-builder-noble
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  el7_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_percona57:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_percona80:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_tidb:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_mysql80:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_mysql84:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_debian_default:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el7:
    docker:
    - image: mydumper/mydumper-builder-el7
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  el8_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_percona57:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_percona80:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_tidb:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_mysql80:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_mysql84:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_debian_default:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el8:
    docker:
    - image: mydumper/mydumper-builder-el8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  el9_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_percona57:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_percona80:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_tidb:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_mysql80:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_mysql84:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_debian_default:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  el9:
    docker:
    - image: mydumper/mydumper-builder-el9
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  bullseye_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_percona57:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_percona80:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_tidb:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_mysql80:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_mysql84:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_debian_default:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bullseye:
    docker:
    - image: mydumper/mydumper-builder-bullseye
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  bookworm_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_percona57:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_percona80:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_tidb:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_mysql80:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_mysql84:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_debian_default:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  bookworm:
    docker:
    - image: mydumper/mydumper-builder-bookworm
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

  trixie_mariadb1011:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.11
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_mariadb1006:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: mariadb:10.6
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_percona57:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:5.7
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_percona80:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_tidb:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: pingcap/tidb
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_mysql80:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.0
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_mysql84:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_debian_default:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie_ubuntu_default:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    - image: mysql:8.4
      command: mysqld
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/src/mydumper

  trixie:
    docker:
    - image: mydumper/mydumper-builder-trixie
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    working_directory: /tmp/src/mydumper

commands:

  prepare_mariadb1006:
    steps:
    - run: sudo bash /tmp/mariadb_repo_setup --skip-maxscale --mariadb-server-version "mariadb-10.6"
#    - run: yum-config-manager --disable mariadb-maxscale || true

  prepare_mariadb1011:
    steps:
    - run: sudo bash /tmp/mariadb_repo_setup --skip-maxscale --mariadb-server-version "mariadb-10.11"
#    - run: yum-config-manager --disable mariadb-maxscale || true

  prepare_el_mysql80:
    steps:
    - run: sudo yum install -y libasan gdb screen time mysql-community-libs mysql-community-devel mysql-community-client

  prepare_el_mysql84:
    steps:
    - run: sudo yum install -y libasan gdb screen time mysql-community-libs mysql-community-devel mysql-community-client

  prepare_apt_debian_default:
    steps:
    - run: sudo apt-get install -y default-mysql-client default-libmysqlclient-dev default-mysql-client-core

  prepare_apt_ubuntu_default:
    steps:
    - run: sudo apt-get install -y default-mysql-client default-libmysqlclient-dev default-mysql-client-core

  prepare_apt_percona57:
    steps:
    - run: sudo percona-release setup -y ps57
    - run: sudo apt-get install -y gdb screen time libperconaserverclient20 percona-server-client-5.7 libperconaserverclient20-dev

  prepare_apt_percona80:
    steps:
    - run: sudo percona-release setup -y ps80
    - run: sudo apt-get install -y gdb screen time libperconaserverclient21 libperconaserverclient21-dev percona-server-client

  prepare_apt_mysql84:
    steps:
    - run: echo "mysql-apt-config mysql-apt-config/select-product string Ok" | sudo debconf-set-selections
    - run: echo "mysql-apt-config mysql-apt-config/select-server string mysql-8.4-lts" | sudo debconf-set-selections
    - run: sudo rm /usr/share/keyrings/mysql-apt-config.gpg
    - run: echo "4" | DEBIAN_FRONTEND=noninteractive sudo dpkg-reconfigure mysql-apt-config
    - run: sudo apt-get update
    - run: sudo apt-get install -y gdb screen time libmysqlclient24 libmysqlclient-dev mysql-client

  prepare_apt_mariadb1006:
    steps:
    - run: sudo apt-get install -y gdb screen time mariadb-client libmariadbclient18 libmariadb-dev libmariadb-dev-compat || true
    - run: sudo apt-get install -y gdb screen time mariadb-client libmariadbclient18 libmariadb-dev libmariadb-dev-compat

  prepare_el_mariadb1006:
    steps:
    - prepare_mariadb1006
    - run: sudo yum install -y libasan gdb screen time MariaDB-devel
    - run: sudo yum install -y libasan gdb screen time MariaDB-compat || true

  prepare_apt_mariadb1011:
    steps:
    - run: sudo apt-get install -y gdb screen time mariadb-client libmariadbclient18 libmariadb-dev libmariadb-dev-compat || true
    - run: sudo apt-get install -y gdb screen time mariadb-client libmariadbclient18 libmariadb-dev libmariadb-dev-compat


  prepare_el7_mariadb1011:
    steps:
    - run: sudo bash /tmp/mariadb_repo_setup --skip-maxscale --mariadb-server-version "mariadb-10.11.11"
#    - run: yum-config-manager --disable mariadb-maxscale || true
    - run: sudo yum install -y libasan gdb screen time MariaDB-devel
    - run: sudo yum install -y libasan gdb screen time MariaDB-compat || true

  prepare_el7_mariadb1006:
    steps:
    - run: sudo bash /tmp/mariadb_repo_setup --skip-maxscale --mariadb-server-version "mariadb-10.6.21"
#    - run: yum-config-manager --disable mariadb-maxscale || true
    - run: sudo yum install -y libasan gdb screen time MariaDB-devel
    - run: sudo yum install -y libasan gdb screen time MariaDB-compat || true

  prepare_el_mariadb1011:
    steps:
    - prepare_mariadb1011
    - run: sudo yum install -y libasan gdb screen time MariaDB-devel
    - run: sudo yum install -y libasan gdb screen time MariaDB-compat || true

  prepare_el7_mysql80:
    steps:
    - prepare_el_mysql80


  prepare_el7_mysql84:
    steps:
    - prepare_el_mysql84


  prepare_el7_debian_default:
    steps:
    - prepare_el_debian_default


  prepare_el7_ubuntu_default:
    steps:
    - prepare_el_ubuntu_default


  prepare_el7_percona57:
    steps:
    - prepare_el_percona57


  prepare_el7_percona80:
    steps:
    - prepare_el_percona80


  prepare_el9_mysql80:
    steps:
    - prepare_el_mysql80


  prepare_el9_mysql84:
    steps:
    - prepare_el_mysql84


  prepare_el9_debian_default:
    steps:
    - prepare_el_debian_default


  prepare_el9_ubuntu_default:
    steps:
    - prepare_el_ubuntu_default


  prepare_el9_percona57:
    steps:
    - prepare_el_percona57


  prepare_el9_percona80:
    steps:
    - prepare_el_percona80


  prepare_el8_mysql80:
    steps:
    - run: sudo dnf module disable mysql -y
    - prepare_el_mysql80


  prepare_el8_mysql84:
    steps:
    - run: sudo dnf module disable mysql -y
    - prepare_el_mysql80


  prepare_el8_debian_default:
    steps:
    - run: sudo dnf module disable mysql -y
    - prepare_el_mysql80


  prepare_el8_ubuntu_default:
    steps:
    - run: sudo dnf module disable mysql -y
    - prepare_el_mysql80


  prepare_el8_percona57:
    steps:
    - run: sudo dnf module disable mysql -y
    - prepare_el_mysql80


  prepare_el8_percona80:
    steps:
    - run: sudo dnf module disable mysql -y
    - prepare_el_mysql80


  prepare_el8_mariadb1011:
    steps:
    - prepare_el_mariadb1011


  prepare_el8_mariadb1006:
    steps:
    - prepare_el_mariadb1006


  prepare_el9_mariadb1011:
    steps:
    - prepare_el_mariadb1011


  prepare_el9_mariadb1006:
    steps:
    - prepare_el_mariadb1006


  prepare_bionic_tidb:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_bionic_percona57:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_bionic_percona80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona80


  prepare_bionic_mysql80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql80


  prepare_bionic_mysql84:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql84


  prepare_bionic_debian_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_debian_default


  prepare_bionic_ubuntu_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_ubuntu_default


  prepare_bionic_mariadb1011:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1011
    - prepare_apt_mariadb1011


  prepare_bionic_mariadb1006:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1006
    - prepare_apt_mariadb1006


  prepare_focal_tidb:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_focal_percona57:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_focal_percona80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona80


  prepare_focal_mysql80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql80


  prepare_focal_mysql84:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql84


  prepare_focal_debian_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_debian_default


  prepare_focal_ubuntu_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_ubuntu_default


  prepare_focal_mariadb1011:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1011
    - prepare_apt_mariadb1011


  prepare_focal_mariadb1006:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1006
    - prepare_apt_mariadb1006


  prepare_jammy_tidb:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_jammy_percona57:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_jammy_percona80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona80


  prepare_jammy_mysql80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql80


  prepare_jammy_mysql84:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql84


  prepare_jammy_debian_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_debian_default


  prepare_jammy_ubuntu_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_ubuntu_default


  prepare_jammy_mariadb1011:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1011
    - prepare_apt_mariadb1011


  prepare_jammy_mariadb1006:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1006
    - prepare_apt_mariadb1006


  prepare_noble_tidb:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_noble_percona57:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_noble_percona80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona80


  prepare_noble_mysql80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql80


  prepare_noble_mysql84:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql84


  prepare_noble_debian_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_debian_default


  prepare_noble_ubuntu_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_ubuntu_default


  prepare_noble_mariadb1011:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1011
    - prepare_apt_mariadb1011


  prepare_noble_mariadb1006:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1006
    - prepare_apt_mariadb1006


  prepare_bullseye_tidb:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_bullseye_percona57:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_bullseye_percona80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona80


  prepare_bullseye_mysql80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql80


  prepare_bullseye_mysql84:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql84


  prepare_bullseye_debian_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_debian_default


  prepare_bullseye_ubuntu_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_ubuntu_default


  prepare_bullseye_mariadb1011:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1011
    - prepare_apt_mariadb1011


  prepare_bullseye_mariadb1006:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1006
    - prepare_apt_mariadb1006


  prepare_bookworm_tidb:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_bookworm_percona57:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_bookworm_percona80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona80


  prepare_bookworm_mysql80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql80


  prepare_bookworm_mysql84:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql84


  prepare_bookworm_debian_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_debian_default


  prepare_bookworm_ubuntu_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_ubuntu_default


  prepare_bookworm_mariadb1011:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1011
    - prepare_apt_mariadb1011


  prepare_bookworm_mariadb1006:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1006
    - prepare_apt_mariadb1006


  prepare_trixie_tidb:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_trixie_percona57:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona57


  prepare_trixie_percona80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_percona80


  prepare_trixie_mysql80:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql80


  prepare_trixie_mysql84:
    steps:
    - run: sudo apt-get update
    - prepare_apt_mysql84


  prepare_trixie_debian_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_debian_default


  prepare_trixie_ubuntu_default:
    steps:
    - run: sudo apt-get update
    - prepare_apt_ubuntu_default


  prepare_trixie_mariadb1011:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1011
    - prepare_apt_mariadb1011


  prepare_trixie_mariadb1006:
    steps:
    - run: sudo apt-get update
    - prepare_mariadb1006
    - prepare_apt_mariadb1006

  prepare_el_percona57:
    steps:
    - run: percona-release setup -y ps57
    - run: dnf -y module disable mysql || true
    - run: yum -y install libasan gdb screen time Percona-Server-devel-57 Percona-Server-client-57

  prepare_el_tidb:
    steps:
    - run: prepare_el_percona57

  prepare_el_percona80:
    steps:
    - run: percona-release setup -y ps80
    - run: yum -y install libasan gdb screen time percona-server-devel percona-server-client

  compile:
    parameters:
      CMAKED:
        default: ""
        type: string
    steps:
    - run:
        command: |
          source /etc/profile.d/sh.local || true
    - run: cmake . <<parameters.CMAKED>>
    - run: make VERBOSE=1
    - run: sudo make install
    - run: ./mydumper --version

  compile_and_test_mydumper:
    parameters:
      test:
        type: boolean
        default: true
    steps:
    - compile
    - when:
        condition: << parameters.test >>
        steps:
        - run: bash ./test_mydumper.sh SSL
    - store_artifacts:
        path: /tmp/stream.sql
        destination: artifact-file
    - store_artifacts:
        path: /tmp/data/

  set_env_vars:
    steps:
    - run:
        command: |
          if [ -z ${CIRCLE_TAG+x} ] ; then echo 'export CIRCLE_TAG="v0.11.1-1"' >> "$BASH_ENV"; fi
          echo 'export MYDUMPER_VERSION=$(  echo "${CIRCLE_TAG:1}" | cut -d'-' -f1 ) ' >> "$BASH_ENV"
          echo 'export MYDUMPER_REVISION=$( echo "${CIRCLE_TAG:1}" | cut -d'-' -f2 ) ' >> "$BASH_ENV"
          cat /etc/profile.d/sh.local >> "$BASH_ENV" || true
          cat $BASH_ENV
          source "$BASH_ENV"

jobs:

  compile_and_test_mydumper_in_bionic_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_mysql80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_mysql84
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_debian_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_ubuntu_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_percona57
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_percona80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_mariadb1011
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_mariadb1006
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bionic_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bionic_tidb
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bionic_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_mysql80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_mysql84
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_debian_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_ubuntu_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_percona57
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_percona80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_mariadb1011
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_mariadb1006
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_focal_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: focal_tidb
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_focal_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_mysql80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_mysql84
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_debian_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_ubuntu_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_percona57
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_percona80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_mariadb1011
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_mariadb1006
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_jammy_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: jammy_tidb
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_jammy_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_mysql80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_mysql84
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_debian_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_ubuntu_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_percona57
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_percona80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_mariadb1011
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_mariadb1006
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_noble_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: noble_tidb
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_noble_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_mysql80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_mysql84
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_debian_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_ubuntu_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_percona57
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_percona80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_mariadb1011
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_mariadb1006
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bullseye_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bullseye_tidb
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bullseye_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_mysql80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_mysql84
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_debian_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_ubuntu_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_percona57
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_percona80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_mariadb1011
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_mariadb1006
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_bookworm_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: bookworm_tidb
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_bookworm_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_mysql80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_mysql84
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_debian_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_ubuntu_default
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_percona57
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_percona80
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_mariadb1011
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_mariadb1006
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_trixie_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: trixie_tidb
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_trixie_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el7_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el7
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el7_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el8_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el8
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el8_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_mysql80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_mysql80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_mysql84:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_mysql84
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_debian_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_debian_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_ubuntu_default:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_ubuntu_default
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_percona57:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_percona57
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_percona80:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_percona80
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_mariadb1011:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_mariadb1011
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_mariadb1006:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_mariadb1006
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  compile_and_test_mydumper_in_el9_tidb:
    parameters:
      test:
        type: boolean
        default: false
      e:
        type: string
        default: el9
    executor: << parameters.e >>
    resource_class: large
    steps:
    - checkout
    - prepare_el9_tidb
    - compile_and_test_mydumper:
        test: << parameters.test >>
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - .

  build_el7_mysql80_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mysql80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mysql80_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mysql80_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mysql80_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_mysql84_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mysql84
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mysql84_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mysql84_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mysql84_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_debian_default_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_debian_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_debian_default_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_debian_default_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_debian_default_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_ubuntu_default_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_ubuntu_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_ubuntu_default_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_ubuntu_default_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_ubuntu_default_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_percona57_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_percona57
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_percona57_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_percona57_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_percona57_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_percona80_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_percona80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_percona80_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_percona80_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_percona80_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_mariadb1011_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mariadb1011
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mariadb1011_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mariadb1011_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mariadb1011_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_mariadb1006_aarch64:
    executor: el7
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mariadb1006
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mariadb1006_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mariadb1006_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mariadb1006_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mysql80_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mysql80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mysql80_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mysql80_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mysql80_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mysql84_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mysql84
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mysql84_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mysql84_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mysql84_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_debian_default_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_debian_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_debian_default_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_debian_default_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_debian_default_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_ubuntu_default_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_ubuntu_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_ubuntu_default_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_ubuntu_default_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_ubuntu_default_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_percona57_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_percona57
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_percona57_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_percona57_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_percona57_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_percona80_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_percona80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_percona80_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_percona80_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_percona80_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mariadb1011_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mariadb1011
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mariadb1011_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mariadb1011_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mariadb1011_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mariadb1006_aarch64:
    executor: el8
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mariadb1006
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mariadb1006_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mariadb1006_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mariadb1006_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mysql80_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mysql80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mysql80_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mysql80_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mysql80_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mysql84_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mysql84
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mysql84_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mysql84_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mysql84_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_debian_default_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_debian_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_debian_default_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_debian_default_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_debian_default_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_ubuntu_default_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_ubuntu_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_ubuntu_default_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_ubuntu_default_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_ubuntu_default_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_percona57_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_percona57
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_percona57_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_percona57_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_percona57_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_percona80_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_percona80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_percona80_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_percona80_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_percona80_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mariadb1011_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mariadb1011
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mariadb1011_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mariadb1011_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mariadb1011_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mariadb1006_aarch64:
    executor: el9
    resource_class: arm.medium
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mariadb1006
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mariadb1006_aarch64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mariadb1006_aarch64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mariadb1006_aarch64 aarch64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_mysql80_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mysql80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mysql80_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mysql80_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mysql80_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_mysql84_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mysql84
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mysql84_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mysql84_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mysql84_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_debian_default_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_debian_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_debian_default_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_debian_default_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_debian_default_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_ubuntu_default_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_ubuntu_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_ubuntu_default_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_ubuntu_default_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_ubuntu_default_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_percona57_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_percona57
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_percona57_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_percona57_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_percona57_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_percona80_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_percona80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_percona80_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_percona80_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_percona80_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_mariadb1011_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mariadb1011
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mariadb1011_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mariadb1011_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mariadb1011_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el7_mariadb1006_x86_64:
    executor: el7
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el7_mariadb1006
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el7_mariadb1006_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el7_mariadb1006_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el7_mariadb1006_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mysql80_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mysql80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mysql80_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mysql80_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mysql80_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mysql84_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mysql84
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mysql84_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mysql84_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mysql84_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_debian_default_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_debian_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_debian_default_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_debian_default_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_debian_default_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_ubuntu_default_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_ubuntu_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_ubuntu_default_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_ubuntu_default_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_ubuntu_default_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_percona57_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_percona57
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_percona57_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_percona57_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_percona57_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_percona80_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_percona80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_percona80_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_percona80_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_percona80_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mariadb1011_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mariadb1011
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mariadb1011_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mariadb1011_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mariadb1011_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el8_mariadb1006_x86_64:
    executor: el8
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el8_mariadb1006
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el8_mariadb1006_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el8_mariadb1006_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el8_mariadb1006_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mysql80_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mysql80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mysql80_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mysql80_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mysql80_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mysql84_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mysql84
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mysql84_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mysql84_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mysql84_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_debian_default_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_debian_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_debian_default_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_debian_default_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_debian_default_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_ubuntu_default_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_ubuntu_default
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_ubuntu_default_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_ubuntu_default_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_ubuntu_default_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_percona57_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_percona57
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_percona57_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_percona57_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_percona57_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_percona80_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_percona80
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_percona80_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_percona80_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_percona80_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mariadb1011_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mariadb1011
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mariadb1011_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mariadb1011_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mariadb1011_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_el9_mariadb1006_x86_64:
    executor: el9
    resource_class: large
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_el9_mariadb1006
    - run: mkdir -p /tmp/package
    - run: yum -y install rpmdevtools
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - run: mkdir -p /tmp/src/mydumper/el9_mariadb1006_x86_64
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz mydumper.cnf mydumper myloader /tmp/src/mydumper/el9_mariadb1006_x86_64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} rpm el9_mariadb1006_x86_64 x86_64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mysql80_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mysql80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mysql80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mysql80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mysql84_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mysql84_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mysql84_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mysql84_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_debian_default_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_debian_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_debian_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_debian_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_ubuntu_default_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_ubuntu_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_ubuntu_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_ubuntu_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_percona57_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_percona57_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_percona57_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_percona57_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_percona80_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_percona80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_percona80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_percona80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mariadb1011_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mariadb1011_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mariadb1011_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mariadb1011_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mariadb1006_arm64:
    executor: bionic
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mariadb1006_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mariadb1006_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mariadb1006_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mysql80_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mysql80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mysql80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mysql80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mysql84_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mysql84_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mysql84_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mysql84_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_debian_default_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_debian_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_debian_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_debian_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_ubuntu_default_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_ubuntu_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_ubuntu_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_ubuntu_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_percona57_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_percona57_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_percona57_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_percona57_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_percona80_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_percona80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_percona80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_percona80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mariadb1011_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mariadb1011_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mariadb1011_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mariadb1011_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mariadb1006_arm64:
    executor: focal
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mariadb1006_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mariadb1006_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mariadb1006_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_mysql80_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mysql80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mysql80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mysql80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_mysql84_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mysql84_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mysql84_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mysql84_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_debian_default_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_debian_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_debian_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_debian_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_ubuntu_default_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_ubuntu_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_ubuntu_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_ubuntu_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_percona57_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_percona57_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_percona57_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_percona57_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_percona80_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_percona80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_percona80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_percona80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_mariadb1011_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mariadb1011_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mariadb1011_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mariadb1011_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_mariadb1006_arm64:
    executor: jammy
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mariadb1006_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mariadb1006_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mariadb1006_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mysql80_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mysql80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mysql80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mysql80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mysql84_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mysql84_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mysql84_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mysql84_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_debian_default_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_debian_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_debian_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_debian_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_ubuntu_default_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_ubuntu_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_ubuntu_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_ubuntu_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_percona57_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_percona57_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_percona57_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_percona57_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_percona80_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_percona80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_percona80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_percona80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mariadb1011_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mariadb1011_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mariadb1011_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mariadb1011_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mariadb1006_arm64:
    executor: noble
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mariadb1006_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mariadb1006_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mariadb1006_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mysql80_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mysql80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mysql80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mysql80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mysql84_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mysql84_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mysql84_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mysql84_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_debian_default_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_debian_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_debian_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_debian_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_ubuntu_default_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_ubuntu_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_ubuntu_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_ubuntu_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_percona57_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_percona57_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_percona57_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_percona57_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_percona80_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_percona80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_percona80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_percona80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mariadb1011_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mariadb1011_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mariadb1011_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mariadb1011_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mariadb1006_arm64:
    executor: bullseye
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mariadb1006_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mariadb1006_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mariadb1006_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mysql80_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mysql80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mysql80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mysql80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mysql84_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mysql84_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mysql84_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mysql84_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_debian_default_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_debian_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_debian_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_debian_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_ubuntu_default_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_ubuntu_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_ubuntu_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_ubuntu_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_percona57_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_percona57_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_percona57_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_percona57_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_percona80_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_percona80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_percona80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_percona80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mariadb1011_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mariadb1011_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mariadb1011_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mariadb1011_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mariadb1006_arm64:
    executor: bookworm
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mariadb1006_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mariadb1006_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mariadb1006_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mysql80_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mysql80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mysql80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mysql80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mysql84_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mysql84_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mysql84_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mysql84_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_debian_default_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_debian_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_debian_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_debian_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_ubuntu_default_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_ubuntu_default_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_ubuntu_default_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_ubuntu_default_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_percona57_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_percona57_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_percona57_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_percona57_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_percona80_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/aarch64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_percona80_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_percona80_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_percona80_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mariadb1011_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mariadb1011_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mariadb1011_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mariadb1011_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mariadb1006_arm64:
    executor: trixie
    resource_class: arm.medium
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/aarch64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mariadb1006_arm64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mariadb1006_arm64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mariadb1006_arm64 arm64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mysql80_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mysql80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mysql80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mysql80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mysql84_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mysql84_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mysql84_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mysql84_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_debian_default_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_debian_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_debian_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_debian_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_ubuntu_default_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_ubuntu_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_ubuntu_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_ubuntu_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_percona57_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_percona57_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_percona57_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_percona57_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_percona80_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_percona80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_percona80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_percona80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mariadb1011_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mariadb1011_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mariadb1011_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mariadb1011_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bionic_mariadb1006_amd64:
    executor: bionic
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bionic_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bionic_mariadb1006_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bionic_mariadb1006_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bionic_mariadb1006_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mysql80_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mysql80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mysql80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mysql80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mysql84_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mysql84_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mysql84_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mysql84_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_debian_default_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_debian_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_debian_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_debian_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_ubuntu_default_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_ubuntu_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_ubuntu_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_ubuntu_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_percona57_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_percona57_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_percona57_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_percona57_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_percona80_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_percona80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_percona80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_percona80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mariadb1011_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mariadb1011_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mariadb1011_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mariadb1011_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_focal_mariadb1006_amd64:
    executor: focal
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_focal_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/focal_mariadb1006_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/focal_mariadb1006_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb focal_mariadb1006_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_mysql80_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mysql80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mysql80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mysql80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_mysql84_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mysql84_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mysql84_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mysql84_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_debian_default_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_debian_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_debian_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_debian_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_ubuntu_default_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_ubuntu_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_ubuntu_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_ubuntu_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_percona57_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_percona57_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_percona57_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_percona57_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_percona80_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - set_env_vars
    - prepare_jammy_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_percona80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_percona80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_percona80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
    - persist_to_workspace:
         root: /tmp/man
         paths:
           - .
  build_jammy_mariadb1011_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mariadb1011_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mariadb1011_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mariadb1011_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_jammy_mariadb1006_amd64:
    executor: jammy
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_jammy_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/jammy_mariadb1006_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/jammy_mariadb1006_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb jammy_mariadb1006_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mysql80_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mysql80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mysql80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mysql80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mysql84_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mysql84_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mysql84_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mysql84_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_debian_default_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_debian_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_debian_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_debian_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_ubuntu_default_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_ubuntu_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_ubuntu_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_ubuntu_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_percona57_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_percona57_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_percona57_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_percona57_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_percona80_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_percona80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_percona80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_percona80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mariadb1011_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mariadb1011_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mariadb1011_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mariadb1011_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_noble_mariadb1006_amd64:
    executor: noble
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_noble_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/noble_mariadb1006_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/noble_mariadb1006_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb noble_mariadb1006_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mysql80_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mysql80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mysql80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mysql80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mysql84_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mysql84_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mysql84_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mysql84_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_debian_default_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_debian_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_debian_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_debian_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_ubuntu_default_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_ubuntu_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_ubuntu_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_ubuntu_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_percona57_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_percona57_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_percona57_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_percona57_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_percona80_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_percona80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_percona80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_percona80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mariadb1011_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mariadb1011_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mariadb1011_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mariadb1011_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bullseye_mariadb1006_amd64:
    executor: bullseye
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bullseye_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bullseye_mariadb1006_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bullseye_mariadb1006_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bullseye_mariadb1006_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mysql80_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mysql80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mysql80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mysql80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mysql84_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mysql84_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mysql84_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mysql84_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_debian_default_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_debian_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_debian_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_debian_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_ubuntu_default_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_ubuntu_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_ubuntu_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_ubuntu_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_percona57_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_percona57_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_percona57_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_percona57_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_percona80_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_percona80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_percona80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_percona80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mariadb1011_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mariadb1011_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mariadb1011_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mariadb1011_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_bookworm_mariadb1006_amd64:
    executor: bookworm
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_bookworm_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/bookworm_mariadb1006_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/bookworm_mariadb1006_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb bookworm_mariadb1006_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mysql80_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mysql80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mysql80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mysql80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mysql80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mysql84_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mysql84
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mysql84_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mysql84_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mysql84_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_debian_default_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_debian_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_debian_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_debian_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_debian_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_ubuntu_default_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_ubuntu_default
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libmysqlclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_ubuntu_default_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_ubuntu_default_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_ubuntu_default_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_percona57_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_percona57
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_percona57_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_percona57_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_percona57_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_percona80_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_percona80
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_perconaserverclient:FILEPATH=/usr/lib/x86_64-linux-gnu/libperconaserverclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_percona80_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_percona80_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_percona80_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mariadb1011_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mariadb1011
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mariadb1011_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mariadb1011_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mariadb1011_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .
  build_trixie_mariadb1006_amd64:
    executor: trixie
    resource_class: large
    parameters:
      build_man:
        type: boolean
        default: false
    
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/man
    - set_env_vars
    - prepare_trixie_mariadb1006
    - run: sudo apt install -y fakeroot
    - run: mkdir -p /tmp/man/
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mariadb:FILEPATH=/usr/lib/x86_64-linux-gnu/libmariadbclient.a"
    - run: if (( $(nm ./mydumper | grep -i mysql | grep " T " | wc -l) < 50 )); then false; fi
    - when:
        condition: << parameters.build_man >>
        steps:
        - run: git submodule update --init docs/
        - run: sudo apt-get install pip sphinx-common
        - run: pip install furo sphinx_copybutton sphinx-inline-tabs
        - run: 
            command: |
              cd docs
              cmake . -DWITH_HTML=OFF
              make
              gzip man/mydumper.1 man/myloader.1
              cp man/mydumper.1.gz  man/myloader.1.gz /tmp/man/
    - run: mkdir -p /tmp/src/mydumper/trixie_mariadb1006_amd64/etc
    - run: cp /tmp/man/mydumper.1.gz /tmp/man/myloader.1.gz  mydumper.cnf mydumper myloader /tmp/src/mydumper/trixie_mariadb1006_amd64/
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION} deb trixie_mariadb1006_amd64 amd64
    - persist_to_workspace:
         root: /tmp/package
         paths:
           - .

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
    - attach_workspace:
        at: /tmp/package
    - run:
        command: |
          rm /tmp/package/mydumper.1.gz /tmp/package/myloader.1.gz
          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "$( cd /tmp/package/; echo -e "MD5s:\n\`\`\`"; md5sum * ;echo -e "\`\`\`\nSHA1s:\n\`\`\`"; sha1sum * ; echo -e "\`\`\`\nSHA256s:\n\`\`\`"; sha256sum * ;echo -e "\`\`\`\n" )" -prerelease -draft -delete ${CIRCLE_TAG} /tmp/package

  publish-repository:
    docker:
      - image: mydumper/mydumper-builder-noble
    steps:
    - run: sudo apt install -y git dpkg-dev apt-utils createrepo-c rpm reprepro
    - attach_workspace:
        at: /tmp/package    
    - run: echo ${MYDUMPER_REPO_PK} | base64 -d | gpg --import
    - run: git clone --no-checkout --filter=tree:0 https://github.com/mydumper/mydumper_repo.git mydumper_repo
    - run:
        command: |
          cd mydumper_repo/
          export DIR_SUFFIX="." && [ $(($(echo "${CIRCLE_TAG}" | cut -d. -f3 | cut -d- -f1)%2)) -eq 0 ] && export DIR_SUFFIX="testing"
          export APT_REPO="main" && [ $(($(echo "${CIRCLE_TAG}" | cut -d. -f3 | cut -d- -f1)%2)) -eq 0 ] && export APT_REPO="testing"
          export REPREPRO_OPTIONS="" && [ $(($(echo "${CIRCLE_TAG}" | cut -d. -f3 | cut -d- -f1)%2)) -eq 0 ] && export REPREPRO_OPTIONS=" -C testing "
          export BASE_PATH=$(pwd)
          export UBUNTU_PATH="apt/ubuntu"
          export DEBIAN_PATH="apt/debian"
          export YUM_PATH="yum"
          git config --global user.name "David Ducos"
          git config --global user.email "david.ducos@gmail.com"
          git checkout HEAD~ yum/rpmmacros
          cp yum/rpmmacros ~/.rpmmacros
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/mydumper/mydumper_repo.git
          git reset HEAD
          mkdir -p $UBUNTU_PATH $DEBIAN_PATH $YUM_PATH
          cd ${BASE_PATH}
          cd ${UBUNTU_PATH}
          git checkout conf dists db
          reprepro ${REPREPRO_OPTIONS} includedeb bionic /tmp/package/mydumper*bionic*deb
          reprepro ${REPREPRO_OPTIONS} includedeb focal /tmp/package/mydumper*focal*deb
          reprepro ${REPREPRO_OPTIONS} includedeb jammy /tmp/package/mydumper*jammy*deb
          reprepro ${REPREPRO_OPTIONS} includedeb noble /tmp/package/mydumper*noble*deb
          git add $(find -type f)
          cd ${BASE_PATH}
          cd ${DEBIAN_PATH}
          git checkout conf dists db 
          reprepro ${REPREPRO_OPTIONS} includedeb bullseye /tmp/package/mydumper*bullseye*deb 
          reprepro ${REPREPRO_OPTIONS} includedeb bookworm /tmp/package/mydumper*bookworm*deb 
          reprepro ${REPREPRO_OPTIONS} includedeb trixie /tmp/package/mydumper*trixie*deb
          git add $(find -type f)
          cd ${BASE_PATH}
          cd ${YUM_PATH}
          gpg --export -a 79EA15C0E82E34BA > key.asc
          rpm --import key.asc
          rpm -q gpg-pubkey --qf "%{name}-%{version}-%{release} --> %{summary}\n"
          mkdir -p 7/${DIR_SUFFIX}/
          cp /tmp/package/mydumper*el7*rpm 7/${DIR_SUFFIX}/
          cd 7/${DIR_SUFFIX}/
          rpm --addsign  *.rpm
          git add *.rpm
          createrepo_c --update . 
          git add repodata
          cd ${BASE_PATH}
          cd ${YUM_PATH}
          mkdir -p 8/${DIR_SUFFIX}/
          cp /tmp/package/mydumper*el8*rpm 8/${DIR_SUFFIX}/
          cd 8/${DIR_SUFFIX}/
          rpm --addsign  *.rpm
          git add *.rpm
          createrepo_c --update . 
          git add repodata
          cd ${BASE_PATH}
          cd ${YUM_PATH}
          mkdir -p 9/${DIR_SUFFIX}/
          cp /tmp/package/mydumper*el9*rpm 9/${DIR_SUFFIX}/
          cd 9/${DIR_SUFFIX}/
          rpm --addsign  *.rpm
          git add *.rpm
          createrepo_c --update . 
          git add repodata
          cd ${BASE_PATH}
          cd ${YUM_PATH}
          cd ${BASE_PATH}
          git commit -m "Upload repo files ${CIRCLE_TAG}" && git push

    - run: 
        command: |
          git clone https://github.com/mydumper/mydumper.git mydumper
          cd mydumper
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/mydumper/mydumper.git
          curl https://github.com/mydumper/mydumper_repo/info/refs?service=git-upload-pack --output ../latest_commit
          git update-index --cacheinfo 160000,$(head -2 ../latest_commit | tail -1 | cut -b9-48),repo
          git commit -am "[skip ci] Auto updated submodule references" && git push

  update_repo:
    docker:
      - image: mydumper/mydumper-builder-noble
    steps:
    - run:
        command: |
          git config --global user.name "David Ducos"
          git config --global user.email "david.ducos@gmail.com"
          git clone https://github.com/mydumper/mydumper.git mydumper
          cd mydumper
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/mydumper/mydumper.git
          curl https://github.com/mydumper/mydumper_repo/info/refs?service=git-upload-pack --output ../latest_commit
          git update-index --cacheinfo 160000,$(head -2 ../latest_commit | tail -1 | cut -b9-48),repo
          git commit -am "[skip ci] Auto updated submodule references" && git push



parameters:
  my_trigger_parameter:
    type: string
    default: ""


workflows:
  version: 2

  api-update-repo:
    when: << pipeline.parameters.my_trigger_parameter >>
    jobs:
    - update_repo

#  api-update-repo-commit:
#    when: 
#      not: << pipeline.parameters.my_trigger_parameter >>
#    jobs:
#    - update_repo

  mydumper:
    jobs:
    - compile_and_test_mydumper_in_bionic_percona57
    - compile_and_test_mydumper_in_bionic_percona80
    - compile_and_test_mydumper_in_focal_percona57
    - compile_and_test_mydumper_in_focal_percona80
    - compile_and_test_mydumper_in_focal_mariadb1011
    - compile_and_test_mydumper_in_noble_ubuntu_default
    - compile_and_test_mydumper_in_el7_percona57
    - compile_and_test_mydumper_in_el7_percona80
    - compile_and_test_mydumper_in_el7_mariadb1011
    - compile_and_test_mydumper_in_el7_mariadb1006
    - compile_and_test_mydumper_in_el7_mysql84
    - compile_and_test_mydumper_in_el8_percona57
    - compile_and_test_mydumper_in_el8_percona80
    - compile_and_test_mydumper_in_el8_mariadb1011
    - compile_and_test_mydumper_in_el8_mariadb1006
    - compile_and_test_mydumper_in_el8_mysql84
    - compile_and_test_mydumper_in_el9_percona80
    - compile_and_test_mydumper_in_el9_mariadb1011
    - compile_and_test_mydumper_in_el9_mariadb1006
    - compile_and_test_mydumper_in_el9_mysql84
    - compile_and_test_mydumper_in_bullseye_percona57
    - compile_and_test_mydumper_in_bullseye_percona80
    - compile_and_test_mydumper_in_bullseye_mariadb1011
    - compile_and_test_mydumper_in_bullseye_mariadb1006
    - compile_and_test_mydumper_in_bookworm_percona57
    - compile_and_test_mydumper_in_bookworm_percona80
    - compile_and_test_mydumper_in_bookworm_mariadb1011
    - compile_and_test_mydumper_in_bookworm_mysql84
    - compile_and_test_mydumper_in_trixie_debian_default
    - compile_and_test_mydumper_in_jammy_percona57:
        test: true
        e: jammy_percona57
    - compile_and_test_mydumper_in_jammy_percona80:
        test: true
        e: jammy_percona80
    - compile_and_test_mydumper_in_jammy_mariadb1011:
        test: true
        e: jammy_mariadb1011
    - compile_and_test_mydumper_in_jammy_mariadb1006:
        test: true
        e: jammy_mariadb1006
    - compile_and_test_mydumper_in_noble_mysql84:
        test: true
        e: noble_mysql84
    - build_bionic_percona80_amd64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_focal_percona80_amd64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_jammy_percona80_amd64:
        build_man: true
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_noble_mysql84_amd64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_noble_ubuntu_default_arm64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_el7_percona57_x86_64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_el8_mysql84_x86_64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_el8_mysql84_aarch64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_el9_mysql84_x86_64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_el9_mysql84_aarch64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_bullseye_percona80_amd64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_bookworm_mysql84_amd64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_bookworm_mariadb1011_arm64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_trixie_debian_default_amd64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/
    - build_trixie_debian_default_arm64:
        requires:
          - build_jammy_percona80_amd64
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+-\d+$/

    - publish-github-release:
        requires:
          - build_bionic_percona80_amd64
          - build_focal_percona80_amd64
          - build_jammy_percona80_amd64
          - build_noble_mysql84_amd64
          - build_noble_ubuntu_default_arm64
          - build_el7_percona57_x86_64
          - build_el8_mysql84_x86_64
          - build_el8_mysql84_aarch64
          - build_el9_mysql84_x86_64
          - build_el9_mysql84_aarch64
          - build_bullseye_percona80_amd64
          - build_bookworm_mysql84_amd64
          - build_bookworm_mariadb1011_arm64
          - build_trixie_debian_default_amd64
          - build_trixie_debian_default_arm64
        filters:
          branches:
            ignore: /.*/
          tags:
#            only: /.*/
            only: /^v\d+\.\d+\.\d+-\d+$/

    - publish-repository:
        requires:
          - publish-github-release
        filters:
          branches:
            ignore: /.*/
          tags:
#            only: /.*/
            only: /^v\d+\.\d+\.\d+-\d+$/

